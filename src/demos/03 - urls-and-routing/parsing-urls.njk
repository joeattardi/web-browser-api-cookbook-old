---
layout: "base.njk"
title: "Parsing URLs"
permalink: "/urls-and-routing/parsing-urls.html"
eleventyNavigation:
  order: 1
  key: parsingUrls
  title: "Parsing URLs"
  parent: urlsAndRouting
---

{% set description %}
  <p>
      Enter a URL and click "Parse URL". The value is passed to the <code>URL</code> constructor, and the component parts of the parsed URL will be shown.
  </p>
{% endset %}

{% set js %}
const form = document.querySelector('form');
const results = document.querySelector('#results');

// The properties of the URL we want to show.
const urlProperties = [
  'host', 'hostname', 'href',
  'origin', 'pathname', 'protocol',
  'search'
];

form.addEventListener('submit', event => {
  event.preventDefault();

  const url = new URL(event.target.elements.url.value);
  event.target.elements.url.value = '';

  const card = document.querySelector('#url-card').content.cloneNode(true).firstElementChild;
  const urlDetails = card.querySelector('ul');
  card.querySelector('.url').textContent = url.toString();

  let details = '';
  urlProperties
    .filter(property => url[property].length)
    .forEach(property => {
      details += `
        <li><strong>${property}</strong>: ${url[property]}</li>
      `;
    });
    urlDetails.innerHTML = details;

  results.insertBefore(card, results.firstElementChild);
});
{% endset %}

{% set css %}
.url-card {
  padding: 1em;
  margin: 0.5em 0;
  background: #EDF2DB;
  border: 1px solid #D4E1AB;
}

.url-card h4 {
  margin: 0;
  font-size: 1.2em;
}
{% endset %}

{% set templateHtml %}
<template id="url-card">
  <div class="url-card">
    <h4></h4>
    <div>
      <ul></ul>
    </div>
  </div>
</template>
{% endset %}

{% set layoutHtml %}
<form>
  <div class="form-field">
    <label for="url">Enter URL</label>
    <input 
      id="url"
      type="url"
      required
      autofocus 
      name="url" 
      placeholder="Enter a URL..."
    >
  </div>
  <div class="form-actions">
    <button>Parse URL</button>
  </div>
</form>
<div id="results"></div>
{% endset %}

{% set html %}
{{ templateHtml | safe }}
{{ layoutHtml | safe  }}
{% endset %}

{% set javascript %}
  {{ js | safe }}
{% endset %}

{% import 'code-block.njk' as codeBlock %}

{% set code %}
  {{ codeBlock.codeBlock(
    'URL parsing', 
    'javascript', 
    'Parses the URL and renders its properties.', 
    js) 
  }}

  {{ codeBlock.codeBlock(
    'Form', 
    'html', 
    'Basic form layout.', 
    html) 
  }}

  {{ codeBlock.codeBlock(
    'Template', 
    'html', 
    'Template used to render URL details.', 
    layoutHtml) 
  }}
{% endset %}

{% include "demo.njk" %}